//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2023 lack
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Code generated by ___1go_build_github_com_vine_io_gogogen_cmd_deepcopy_gen. Do NOT EDIT.

package v1

// DeepCopyInto is an auto-generated deepcopy function, coping the receiver, writing into out. in must be no-nil.
func (in *EntityMeta) DeepCopyInto(out *EntityMeta) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.References != nil {
		in, out := &in.References, &out.References
		*out = make([]*OwnerReference, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*out)[i], &(*out)[i]
				*out = new(OwnerReference)
				**out = **in
			}
		}
	}
	return
}

// DeepCopy is an auto-generated deepcopy function, copying the receiver, creating a new EntityMeta.
func (in *EntityMeta) DeepCopy() *EntityMeta {
	if in == nil {
		return nil
	}
	out := new(EntityMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepFrom is an auto-generated deepcopy function, copying from EntityMeta.
func (in *EntityMeta) DeepFrom(o *EntityMeta) {
	if in == nil {
		return
	}
	o.DeepCopyInto(in)
}

// DeepCopyInto is an auto-generated deepcopy function, coping the receiver, writing into out. in must be no-nil.
func (in *ListMeta) DeepCopyInto(out *ListMeta) {
	*out = *in
	return
}

// DeepCopy is an auto-generated deepcopy function, copying the receiver, creating a new ListMeta.
func (in *ListMeta) DeepCopy() *ListMeta {
	if in == nil {
		return nil
	}
	out := new(ListMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepFrom is an auto-generated deepcopy function, copying from ListMeta.
func (in *ListMeta) DeepFrom(o *ListMeta) {
	if in == nil {
		return
	}
	o.DeepCopyInto(in)
}

// DeepCopyInto is an auto-generated deepcopy function, coping the receiver, writing into out. in must be no-nil.
func (in *ObjectMeta) DeepCopyInto(out *ObjectMeta) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.References != nil {
		in, out := &in.References, &out.References
		*out = make([]*OwnerReference, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*out)[i], &(*out)[i]
				*out = new(OwnerReference)
				**out = **in
			}
		}
	}
	return
}

// DeepCopy is an auto-generated deepcopy function, copying the receiver, creating a new ObjectMeta.
func (in *ObjectMeta) DeepCopy() *ObjectMeta {
	if in == nil {
		return nil
	}
	out := new(ObjectMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepFrom is an auto-generated deepcopy function, copying from ObjectMeta.
func (in *ObjectMeta) DeepFrom(o *ObjectMeta) {
	if in == nil {
		return
	}
	o.DeepCopyInto(in)
}

// DeepCopyInto is an auto-generated deepcopy function, coping the receiver, writing into out. in must be no-nil.
func (in *OwnerReference) DeepCopyInto(out *OwnerReference) {
	*out = *in
	return
}

// DeepCopy is an auto-generated deepcopy function, copying the receiver, creating a new OwnerReference.
func (in *OwnerReference) DeepCopy() *OwnerReference {
	if in == nil {
		return nil
	}
	out := new(OwnerReference)
	in.DeepCopyInto(out)
	return out
}

// DeepFrom is an auto-generated deepcopy function, copying from OwnerReference.
func (in *OwnerReference) DeepFrom(o *OwnerReference) {
	if in == nil {
		return
	}
	o.DeepCopyInto(in)
}

// DeepCopyInto is an auto-generated deepcopy function, coping the receiver, writing into out. in must be no-nil.
func (in *State) DeepCopyInto(out *State) {
	*out = *in
	return
}

// DeepCopy is an auto-generated deepcopy function, copying the receiver, creating a new State.
func (in *State) DeepCopy() *State {
	if in == nil {
		return nil
	}
	out := new(State)
	in.DeepCopyInto(out)
	return out
}

// DeepFrom is an auto-generated deepcopy function, copying from State.
func (in *State) DeepFrom(o *State) {
	if in == nil {
		return
	}
	o.DeepCopyInto(in)
}

// DeepCopyInto is an auto-generated deepcopy function, coping the receiver, writing into out. in must be no-nil.
func (in *TypeMeta) DeepCopyInto(out *TypeMeta) {
	*out = *in
	return
}

// DeepCopy is an auto-generated deepcopy function, copying the receiver, creating a new TypeMeta.
func (in *TypeMeta) DeepCopy() *TypeMeta {
	if in == nil {
		return nil
	}
	out := new(TypeMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepFrom is an auto-generated deepcopy function, copying from TypeMeta.
func (in *TypeMeta) DeepFrom(o *TypeMeta) {
	if in == nil {
		return
	}
	o.DeepCopyInto(in)
}
